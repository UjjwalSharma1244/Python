# Method 1 , Time complexity is O(n*n)

def product(arr,n):
    a = arr[0]
    b = arr[1]
    for i in range(0,n):
        for j in range(i+1,n):
            if arr[i] * arr[j] > a * b :
                a = arr[i]
                b = arr[j]

    print("maximum product is : {0} & {1}".format(a,b))

arr = [1,4,3,6,7,0]
n = len(arr)
product(arr,n)

# Method 2 , using sorting And time complexity is O(nlogn)

def product(arr,n):
    if (n<2):
        print("no pair exist")
        return

    arr.sort()
    sum1 = arr[0] * arr[1]
    sum2 = arr[n-2] * arr[n-1]
    if sum1 > sum2 :
        print("maximum pair is :{} & {}".format(arr[0],arr[1]))
    else:
        print("Maximum pair is : {} & {}".format(arr[n-2],arr[n-1]))

arr = [1,8,3,6,7,0]
n = len(arr)
product(arr, n)
