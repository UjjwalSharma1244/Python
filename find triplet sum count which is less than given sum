# Time complexity O(n*n*n), Using 3 for loop

def triplet_sum(arr, n, sum):
    ans = 0
    for i in range( 0 ,n-2):
        for j in range( i+1 ,n-1):
            for k in range( j+1, n):
                if (arr[i] + arr[j] + arr[k] < sum):
                    ans+=1
    return ans

arr = [5, 1, 3, 4, 7]
n = len(arr)
sum = 12
print(triplet_sum(arr, n, sum))

# Method 2 Using Sorting
# Time complexity O(n*n)

def triplet_sum(arr,n,sum):
    arr.sort()
    ans = 0
    for i in range(0,n-2):
        j = i+1
        k = n-1
        while(j<k):
            if arr[i] + arr[j] + arr[k] >= sum:
                k -= 1
            else:
                ans += (k-j)
                j += 1
    return ans
arr = [5,1,3,4,7]
n = len(arr)
sum = 12
print("triplet is : ", triplet_sum(arr,n,sum))
